---
import { getCollection } from "astro:content";
import Button from "../../../components/Button.astro";
import FlexCenter from "../../../components/FlexCenter.astro";
import Layout from "../../../layouts/Layout.astro";

export async function getStaticPaths({ paginate }) {
  const posts = await getCollection("posts", ({ data }) => {
    const isDev = import.meta.env.DEV;
    return data.draft !== true || isDev;
  });

  const allTags = new Set(
    posts.flatMap((x) => x.data.tags).map((x) => x.toLowerCase()),
  );
  return Array.from(allTags).flatMap((tag) => {
    const filteredPosts = posts.filter((post) =>
      post.data.tags.map((x) => x.toLowerCase()).includes(tag),
    );
    const sortedPosts = filteredPosts.sort((first, second) =>
      first.data.date < second.data.date ? 1 : -1,
    );
    const encodedPosts = sortedPosts.map((post) => {
      const encodedTags = post.data.tags.map((tag) => encodeURIComponent(tag));
      return {
        ...post,
        data: {
          ...post.data,
          tags: encodedTags,
        },
      };
    });
    return paginate(encodedPosts, {
      params: { tag: encodeURIComponent(tag) },
      pageSize: 5,
    });
  });
}

const { page } = Astro.props;
const some = page.url.current.slice(7);
const currentTag = some.slice(0, some.length - 2);
const currentTagUpperCase =
  currentTag.charAt(0).toUpperCase() + currentTag.slice(1);
---

<Layout
  title={currentTagUpperCase + " | Gerben Veenhof"}
  description={"Read all my posts about " + currentTag}
>
  <h1 class="center-text">{currentTagUpperCase} Posts üìù</h1>
  <div class="posts">
    {
      page.data.map((post) => (
        <div>
          <a class="post" href={`/post/${post.slug}`}>
            <h2>{post.data.title}</h2>
          </a>
          <p>{post.data.description}</p>
        </div>
      ))
    }
  </div>
  <div class="pagination">
    {
      page.url.prev ? (
        <Button
          href={page.url.prev}
          icon="mdi:arrow-back-circle"
          nofollow={false}
        >
          Previous
        </Button>
      ) : null
    }
    {
      page.url.next ? (
        <Button
          href={page.url.next}
          icon="mdi:arrow-forward-circle"
          nofollow={false}
        >
          Next
        </Button>
      ) : null
    }
    <FlexCenter>
      <Button href="/posts" icon="mdi:arrow-back-circle">All Posts</Button>
    </FlexCenter>
  </div>
</Layout>
