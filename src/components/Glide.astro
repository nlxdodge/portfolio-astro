---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

const works = await getCollection("works", ({ data }) => {
  const isDev = import.meta.env.DEV;
  return data.draft !== true || isDev;
});
const sortedWorks = works.sort((first, second) =>
  first.data.order > second.data.order ? 1 : -1,
);
---

<div class="glide">
  <div data-glide-el="track" class="glide__track">
    <ul class="glide__slides">
    {
      sortedWorks.map((work) => (
        <li class="glide__slide">
          <a href={`/works/${work.slug}`}>
            <Image src={work.data.image} alt={work.data.image_alt} format="avif" />
            <p>{work.data.title} <span>({work.data.category})</span></p>
          </a>
        </li>
      ))
    }
    </ul>
  </div>
  <div class="glide__bullets" data-glide-el="controls[nav]">
    {
      sortedWorks.map((work) => (
        <div class="glide__bullet" data-glide-dir={"=" + (work.data.order - 1)}></div>
      ))
    }
  </div>
</div>

<script>
  import Glide from "@glidejs/glide";
  new Glide(".glide", {
    type: "carousel",
    perView: 1,
    autoplay: 5000,
    hoverpause: true,
  }).mount();
</script>

<style lang="scss">
  @forward "@glidejs/glide/dist/css/glide.core.min.css";

  .glide {
    margin: 75px 0;

    .glide__bullets {
      display: flex;
      justify-content: center;
      padding: 20px;

      .glide__bullet {
        position: relative;
        background-color: $template-color-accent;
        @include transition(all 0.2s ease-in-out);
        margin: 0 10px;
        width: 24px;
        height: 24px;
        border-radius: 100%;

        &:hover,
        &:focus {
          cursor: pointer;
          filter: brightness(0.5);
          @include transition(all 0.2s ease-in-out);
          background-color: $template-color-accent;
        }

        div {
          z-index: -1;
          position: absolute;
          display: block;
          top: -4px;
          left: -4px;
          width: 32px;
          height: 32px;
          border-radius: 100%;
          background-color: $template-color-accent;
          filter: opacity(0);
          @include transition(all 0.2s ease-in-out);
        }

        &.glide__bullet--active div {
          filter: opacity(0.5);
          @include transition(all 0.2s ease-in-out);
        }
      }
    }

    .glide__track {
      border-radius: 10px;
    }

    .glide__slides {
      .glide__slide {
        position: relative;
        height: 450px;

        img {
          height: 100%;
          position: absolute;
          top: 0;
          bottom: 0;
          left: 0;
          right: 0;
          margin: auto;

          @include media(">tablet") {
            width: 100%;
            height: auto;
          }
        }

        a {
          text-decoration: none;
        }

        p {
          border-radius: 7px;
          width: 240px;
          position: absolute;
          bottom: 0;
          left: 50%;
          transform: translate(-50%, -20%);
          color: #fff;
          font-size: 1.2em;
          text-align: center;
          font-family: $template-header-font;
          display: flex;
          align-items: center;
          flex-direction: column;
          gap: 10px;
          
          background-color: rgba(0, 0, 0, 0.6);
          padding: 10px 35px;
          
          @include media(">tablet") {
            font-size: 1.75em;
            width: auto;
            flex-direction: row;
          }

          span {
            font-family: $template-default-font;
            font-size: 1.25rem;
          }
        }
      }
    }
  }
</style>
