---
export interface Props {
  title: string;
  description?: string;
}

const { title, description } = Astro.props;

import { SEO } from "astro-seo";

import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";

---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <SEO
      title={title}
      description={description}
      twitter={{
        creator: "@gerbenveenhof",
      }}
      extend={{
        meta: [
          { name: "description", content: { description } },
          { name: "twitter:title", content: { title } },
          { name: "twitter:description", content: { description } },
        ],
      }}
    />
  </head>
  <body>
    <main>
      <Header />
      <slot />
      <Footer />
    </main>

    <script is:inline>
      function randomFromArray(inputArray) {
        return inputArray[Math.floor(Math.random() * inputArray.length)];
      }

      function getRandomColor() {
        return randomFromArray(["orange", "purple", "cyan", "green", "blue"]);
      }

      function setColor(color) {
        const body = document.querySelector("body");
        body.classList.remove(localStorage.getItem("color"));
        body.classList.add(color);
        localStorage.setItem("color", color);
      }

      const pageAccessedByReload = window.performance
        .getEntriesByType("navigation")
        .map((navigation) => navigation.type)
        .includes("reload");
      if (pageAccessedByReload) {
        localStorage.removeItem("color");
      }
      
      setColor(localStorage.getItem("color") != undefined ? localStorage.getItem("color") : getRandomColor());
    </script>
    <script src="https://unpkg.com/website-carbon-badges@1.1.3/b.min.js" defer
    ></script>
  </body>
</html>

<style is:global lang="scss">
  main {
    // this is a hack so that the globals.scss file is getting loaded in all components
  }
</style>